# sysbasiccmd
# * see the repository LICENSE, README, and CONTRIBUTING files for more information

# spell-checker:ignore (libs) libselinux gethostid procfs

[package]
name = "easybox"
version = "0.0.1"
authors = ["openeuler developers"]
license = "MulanPSL-2.0"
description = "sysbasiccmd ~ GNU coreutils (updated); implemented as universal (cross-platform) utils, written in Rust"
default-run = "easybox"

homepage = "https://gitee.com/openeuler/easybox"
repository = "https://gitee.com/openeuler/easybox"
readme = "README.md"
keywords = ["coreutils", "easybox", "util-linux", "cli", "utility"]
categories = ["command-line-utilities"]
rust-version = "1.60.0"
edition = "2021"

build = "build.rs"

[features]
default = [ "linux" ]
linux = [
    "base32",
    "flock",
    "hwclock",
    "pidof",
    "pstree",
    "taskset",
    "lspci",
    "xargs",
    "attr",
    "free",
    "usleep",
    "which",
    "usleep",
    "column",
    "setsid",
    "sha256sum",
    "killall",
    "md5sum",
    "iostat",
    "sysctl",
    "pgrep",
    "groupadd",
    "usermod",
    "useradd",
]
##
# * bypass/override ~ translate 'test' feature name to avoid dependency collision with rust core 'test' crate (o/w surfaces as compiler errors during testing)
oedoc = [ "zip" ]

[workspace]
members = [
  # external binaries
  "src/oe/base32",
  "src/oe/flock",
  "src/oe/hwclock",
  "src/oe/pidof",
  "src/oe/pstree",
  "src/oe/taskset",
  "src/oe/lspci",
  "src/oe/xargs",
  "src/oe/attr",
  "src/oe/which",
  "src/oe/usleep",
  "src/oe/free",
  "src/oe/usleep",
  "src/oe/column",
  "src/oe/setsid",
  "src/oe/sha256sum",
  "src/oe/killall",
  "src/oe/md5sum",
  "src/oe/iostat",
  "src/oe/sysctl",
  "src/oe/pgrep",
  "src/oe/groupadd",
  "src/oe/usermod",
  "src/oe/useradd",
]

[dependencies]
clap = { version = "3.2.0", features = ["wrap_help", "cargo"] }
clap_complete = "3.1.0"
once_cell = "1.13.1"
phf = "0.10.1"
regex = "1.6.0"
selinux = { version="0.3.0", optional = true }
sysinfo = "0.29.11"
textwrap = { version="0.15.0", features=["terminal_size"] }
unicode-width = "=0.1.13"
uucore = { version=">=0.0.16", package="uucore", path="src/uucore" }
zip = { version = "0.6.0", optional=true, default_features=false, features=["deflate"] }
# * uutils
base32  = { optional=true, version="0.0.16", package="oe_base32", path="src/oe/base32" }
flock={optional = true,version = "0.0.1",package = "oe_flock",path = "src/oe/flock"}
hwclock  = { optional=true, version="0.0.1", package="oe_hwclock", path="src/oe/hwclock" }
pidof  = { optional=true, version="0.0.1", package="oe_pidof", path="src/oe/pidof" }
pstree = { optional=true, version="0.0.1", package="oe_pstree", path="src/oe/pstree" }
taskset  = { optional=true, version="0.0.1", package="oe_taskset", path="src/oe/taskset" }
lspci  = { optional=true, version="0.0.1", package="oe_lspci", path="src/oe/lspci" }
xargs = { optional=true, version="0.0.1", package="oe_xargs", path="src/oe/xargs" }
attr  = { optional=true, version="0.0.1", package="oe_attr", path="src/oe/attr" }
free = { optional=true, version="0.0.1", package="oe_free", path="src/oe/free" }
which  = { optional=true, version="0.0.1", package="oe_which", path="src/oe/which" }
usleep = { optional=true, version="0.0.1", package="oe_usleep", path="src/oe/usleep" }
column = { optional=true, version="0.0.1", package="oe_column", path="src/oe/column" }
setsid = { optional=true, version="0.0.1", package="oe_setsid", path="src/oe/setsid" }
sha256sum  = { optional=true, version="0.0.1", package="oe_sha256sum", path="src/oe/sha256sum" }
killall = { optional=true, version="0.0.1", package="oe_killall", path="src/oe/killall" }
md5sum  = { optional=true, version="0.0.1", package="oe_md5sum", path="src/oe/md5sum" }
iostat  = { optional=true, version="0.0.1", package="oe_iostat", path="src/oe/iostat" }
sysctl = { optional=true, version="0.0.1", package="oe_sysctl", path="src/oe/sysctl" }
pgrep = { optional=true, version="0.0.1", package="oe_pgrep", path="src/oe/pgrep" }
groupadd = { optional=true, version="0.0.1", package="oe_groupadd", path="src/oe/groupadd" }
usermod = { optional=true, version="0.0.1", package="oe_usermod", path="src/oe/usermod" }
useradd = { optional=true, version="0.0.1", package="oe_useradd", path="src/oe/useradd" }


# this breaks clippy linting with: "tests/by-util/test_factor_benches.rs: No such file or directory (os error 2)"
# factor_benches = { optional = true, version = "0.0.0", package = "uu_factor_benches", path = "tests/benches/factor" }

#
# * pinned transitive dependencies
# Not needed for now. Keep as examples:
#pin_cc = { version="1.0.61, < 1.0.62", package="cc" } ## cc v1.0.62 has compiler errors for MinRustV v1.32.0, requires 1.34 (for `std::str::split_ascii_whitespace()`)

[dev-dependencies]
chrono = { version="^0.4.19", default-features=false, features=["std", "alloc", "clock"]}
conv = "0.3.0"
filetime = "0.2.0"
glob = "0.3.0"
libc = "0.2.0"
pretty_assertions = "1.0.0"
rand = "0.8.0"
regex = "1.6.0"
sha1 = { version="0.10.0", features=["std"] }
tempfile = "3.0.0"
#time = "0.3.25"
unindent = "0.1.3"
uucore = { version=">=0.0.16", package="uucore", path="src/uucore", features=["entries", "process"] }
walkdir = "2.2.0"
atty = "0.2.0"
hex-literal = "0.3.1"
lazy_static = "1.4.0"
nix = { version="0.27.1", features=["user"]}
serial_test = "1.0.0"
serde_json = "1.0"

[target.'cfg(any(target_os = "linux", target_os = "android"))'.dev-dependencies]
procfs = { version = "0.14.0", default-features = false }
rlimit = "0.8.3"

[build-dependencies]
phf_codegen = "0.10.0"

[[bin]]
name = "easybox"
path = "src/bin/coreutils.rs"

[[bin]]
name = "oedoc"
path = "src/bin/uudoc.rs"
required-features = ["oedoc"]
